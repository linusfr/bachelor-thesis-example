apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: linus
  labels:
    app: postgres
spec:
  type: ClusterIP
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    app: postgres
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-configmap
  namespace: linus
data:
  host: "postgres-service"
  dbname: "cats"
  user: "demo"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-statefulset
  namespace: linus
  labels:
    app: postgres
spec:
  serviceName: postgres-service
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:13-alpine
          volumeMounts:
            - name: postgres-volume
              mountPath: /var/lib/postgresql/data
            - name: db-password
              mountPath: "/etc/db_password"
              readOnly: true
          env:
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: postgres-configmap
                  key: dbname
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: postgres-configmap
                  key: user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-password-secret
                  key: password
            - name: PGDATABASE
              valueFrom:
                configMapKeyRef:
                  name: postgres-configmap
                  key: dbname
            - name: PGUSER
              valueFrom:
                configMapKeyRef:
                  name: postgres-configmap
                  key: user
          ports:
            - containerPort: 5432
      volumes:
        - name: db-password
          secret:
            secretName: postgres-password-secret
            defaultMode: 0600
  volumeClaimTemplates:
    - metadata:
        name: postgres-volume
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: local-path
        resources:
          requests:
            storage: 2Gi
# ---
# apiVersion: batch/v1beta1
# kind: CronJob
# metadata:
#   name: postgres-backup-cronjob
#     namespace: linus
# spec:
#   schedule: "* 2 * * *"
#   jobTemplate:
#     spec:
#       template:
#         spec:
#           volumes:
#             - name: nfs-backup-volume
#               nfs:
#                 server: 192.168.0.39
#                 path: /home/xenon/kubernetes/backup
#             - name: db-password
#               secret:
#                 secretName: postgres-password-secret
#                 defaultMode: 0600
#           containers:
#             - name: postgres
#               image: postgres:13-alpine
#               env:
#                 - name: PGHOST
#                   valueFrom:
#                     configMapKeyRef:
#                       name: postgres-configmap
#                       key: host
#                 - name: PGDATABASE
#                   valueFrom:
#                     configMapKeyRef:
#                       name: postgres-configmap
#                       key: dbname
#                 - name: PGUSER
#                   valueFrom:
#                     configMapKeyRef:
#                       name: postgres-configmap
#                       key: user
#               volumeMounts:
#                 - name: nfs-backup-volume
#                   mountPath: /backup
#                 - name: db-password
#                   mountPath: "/etc/db_password"
#                   readOnly: true

#               command: ["bash"]
#               args: [
#                   "-c",
#                   '
#                   echo "*:*:*:*:$(cat /etc/db_password/password)"
#                   > ~/.pgpass
#                   &&
#                   chmod 0600 ~/.pgpass
#                   &&
#                   pg_dump
#                   --verbose
#                   --no-owner
#                   --format=custom
#                   --file=/backup/$(PGDATABASE).sql.gz
#                   ',
#                 ]
#           restartPolicy: Never
